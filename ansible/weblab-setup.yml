
- name: Setup Apache2 & Deploy Artifact
  hosts: stagingsrvgrp
  become: yes
  vars:
    timestamp: "{{ansible_date_time.date}}_{{ansible_date_time.hour}}_{{ansible_date_time.minute}}"
  tasks:
    - name: Download latest weblab.tgz from nexus
      get_url:
        url: "http://{{USER}}:{{PASS}}@{{nexusip}}:8081/repository/{{reponame}}/{{artifactname}}/{{hyphen}}/{{weblab_version}}"
        dest: "/tmp/weblabapp-{{weblab_version}}"
      register: tgzdeploy
      tags:
       - deploy

    - stat:
        path: /var/www/weblab.local/public_html
      register: artifact_stat
      tags:
        - deploy

    - name: Stop Apache
      service:
        name: "{{item}}"
        state: stopped
      loop:
        - apache2
        - php8.1-fpm
      tags:
        - deploy

    - name: Try Backup and Deploy
      block:
      - name: Archive public_html dir with timestamp
        archive:
          path: /var/www/weblab.local/public_html
          dest: "/opt/public_html_{{timestamp}}.tgz"
        when: artifact_stat.stat.exists
        register: archive_info
        tags:
          - deploy

      - name: copy public_html dir with BK name
        shell: cp -r public_html BK
        args:
          chdir: /var/www/weblab.local/

      - name: Delete current artifact
        file:
          path: "{{item}}"
          state: absent
        when: archive_info.changed
        loop:
          - /var/www/weblab.local/public_html
          - /var/www/weblab.local/public_html.tgz
        tags:
          - deploy

      - name: Try deploy artifact else restore from previos BK
        block:
         - name: Deploy weblab artifact
           copy:
             src: "/tmp/weblabapp-{{weblab_version}}"
             dest: /var/www/weblab.local/public_html.tgz
             remote_src: yes
           register: deploy_info
           tags:
            - deploy
        rescue:
          - shell: cp -r BK public_html
            args:
              chdir: /var/www/weblab.local/

      rescue:
       - name: Start Apache2 php8.1-fpm
         service:
           name: "{{item}}" 
           state: started
         loop:
           - apache2
           - php8.1-fpm

    - name: Start Apache2 php8.1-fpm
      service:
        name: "{{item}}"		  
        state: started
      when: deploy_info.changed
      loop:
        - apache2
        - php8.1-fpm
      tags:
        - deploy

    - name: Extract public_html.tgz
      unarchive:
        src: /var/www/weblab.local/public_html.tgz
        dest: /var/www/weblab.local
        remote_src: yes

    - name: Rename file package
      shell: mv /var/www/weblab.local/package /var/www/weblab.local/public_html
    
    # test if nvm has been installed by the user desired
    - stat:
          path: /home/devops/.nvm
      register: nvm_path

    - name: Setup NodeVersionManager and install node version
      become: yes
      # Execute config files such as .profile (Ansible uses non-interactive login shells)
      become_flags: -i 
      become_user: devops 
      block:
        - name: Install nvm
          shell: >
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash 
          args:
            executable: /bin/bash
            chdir: "$HOME"
            creates: "$HOME/.nvm/nvm.sh"

        - name: Setup .profile of devops
          lineinfile:
            path: ~/.profile
            # This will make sure Node is on the users PATH
            line: source ~/.nvm/nvm.sh 
            create: yes
          become_flags: -i  
      when: nvm_path.stat.exists  == false 

      # if we got here we already know node version manager is installed
    - name: installing node versions using loop
      command: sudo -iu devops nvm install {{item}}
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/versions/node/v{{item}}"
      loop:
        - 18.16.0

    - name: Change to the target directory
      command: cd /var/www/weblab.local/public_html

    - name: Install npm packages
      command: npm install --force

  handlers:
   - name: Restart Apache2
     service:
      name: Apache2
      state: restarted
