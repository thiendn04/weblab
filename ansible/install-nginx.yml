- name: Ansible Playbook to Install and Setup Apache on Ubuntu
  hosts: stagingsrvgrp
  become: yes
  tasks:

    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Upgrade all packages on servers
      apt: upgrade=dist force_apt_get=yes

    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no

    - name: Reboot the box if kernel updated
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists

    - name: Install Nginx
      apt: 
        name: nginx
        update_cache: yes 
        state: present


    - name: Create document root for domain configured in host variable
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Creat directory BK
      file:
        path: "/var/www/{{ http_host }}/BK"
        state: directory

    - name: Creat directory public_html
      file:
        path: "/var/www/{{ http_host }}/public_html"
        state: directory    

    - name: Set up Nginx
      template:
        src: "files/nginx-template.conf"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"

    - name: Disable default Apache website
      command: "{{ item }}"
      loop:
        - unlink /etc/nginx/sites-enabled/default
        - unlink /etc/nginx/sites-enabled/example.com


    - name: Bring your NGINX site live
      command: ln -s /etc/nginx/sites-available/{{ http_conf }} /etc/nginx/sites-enabled/
      notify: Reload Nginx

    - name: Allow everything and enable UFW
      ufw:
        state: enabled
        policy: allow

    - name: "UFW firewall allow port"
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:  "{{ ufw_port }}" 

  #   - name: Install Repository
  #     apt: 
  #       name:  software-properties-common
  #       state:  latest

  #   - name: Add php repository
  #     apt_repository:
  #       repo: 'ppa:ondrej/php'

  #   - name: Install PHP and required modules
  #     apt:
  #       name: 
  #         - php8.1
  #         - php8.1-fpm
  #         - libapache2-mod-php
  #         - libapache2-mod-fcgid
  #         - php8.1-mysql
  #         - php8.1-curl
  #         - php8.1-gd
  #         - php8.1-zip
  #         - php8.1-mbstring
  #         - php8.1-xml
  #       update_cache: yes
  #       state: present

  #   - name: Start & Enable php-fpm
  #     service: 
  #       name: php8.1-fpm
  #       state: started
  #       enabled: yes
  #     notify: restart_php-fpm  

  #   - name: Install unzip
  #     apt: 
  #       name: 
  #         -  unzip
  #         -  tar
  #       state: latest

  #   - name: Download php-composer
  #     get_url:
  #       url: https://getcomposer.org/installer
  #       dest: /tmp/installer

  #   - name: install composer
  #     shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
  #     args:
  #       creates: /usr/local/bin/composer

  #   - name: rename composer.phar to composer
  #     shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  #     args:
  #       creates: /usr/local/bin/composer

  #   - name: make composer executable
  #     file: 
  #       path: /usr/local/bin/composer
  #       mode: a+x
  #       state: file

  #   - name: Creat directory phpmyadmin
  #     file:
  #       path: /var/www/html/phpmyadmin
  #       state: directory

  #   - name: Download and extract archive
  #     unarchive:
  #       src: https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip
  #       dest: /var/www/html/phpmyadmin/
  #       remote_src: true
  #       validate_certs: no

  #   - name: Move file
  #     shell:  mv /var/www/html/phpmyadmin/phpMyAdmin-5.2.1-all-languages/* /var/www/html/phpmyadmin

  #   - name: Rename file
  #     shell: mv /var/www/html/phpmyadmin/config.sample.inc.php /var/www/html/phpmyadmin/config.inc.php

  #   - name: Set up phpmyadmin directory.
  #     template:
  #       src: "files/directory.conf"
  #       dest: "/etc/nginx/sites-enabled/directory.conf"
  #     notify: 
  #       -  restart_php-fpm

  #   - name: Update apt cache
  #     apt:
  #       update_cache: yes

  #   - name: Install python3-regex package
  #     apt:
  #       name: python3-regex
  #       state: present

  #   - name: Search and edit file config.inc.php
  #     replace:
  #       path: /var/www/html/phpmyadmin/config.inc.php
  #       regexp: 'localhost'
  #       replace: '192.168.254.134'

  # handlers:
  #   - name: restart_php-fpm
  #     service:
  #       name: php8.1-fpm
  #       state: restarted

  #   - name: Reload Nginx
  #     service:
  #       name: nginx
  #       state: reloaded    